---
title: "Rafa: How Being a Developer Makes Me a Better Designer"
description: "Transcript of Rafa's talk, originally presented at MOBX conference in Berlin, titled 'How Being a Developer Makes Me a Better Designer'"
video: https://vimeo.com/224545194
date: 2018-09-28
---


  <h1>How being a developer makes me a better designer</h1>

  <p><em class="aside">This is a transcript of a talk originally presented at MOBX in Berlin, 2016.</em></p>
  
  <p><em class="aside">I've updated this talk in 2019, presented at Uber Design Night (Amsterdam), <a href="https://pitch.com/public/5900423c-4ae8-4552-9ace-1c1835b73840" target="_blank">here are the slides</a>.</em></p>

  <p>I’ve decided to name this talk &quot;How being a developer makes me a better designer”. Some of you might be thinking: “Is this another should designers code Twitter drama thing?”—No, it’s not. This is about how being a developer makes me a better designer.</p>

  <p>In 2009 I went to college to study Computer Science. Why? Because when I was 5 years old I wrote my first video game, using my own programming language, which was later bought by Microsoft for 100 million dollars… nah, that’s not true. </p>

  <p>The truth is that I liked computers and I liked video games and it was apparent to me, even back then, that everything had software in it. Your microwave has software, your fridge, your TV, heck — even my <a href="https://boostedboards.com">skateboard</a> has software now. Last month I stayed at a friends&#8217; place in San Francisco and even his mattress had an app — crazy talk.</p>

  <p>So if everything in the world is going to have software, then I want to understand software so that I can understand the world—makes sense, right?</p>

  <p>Everyone is on their phones, on apps like Facebook all the time, yet, they have no idea what that is in reality.</p>

  <p>So I went to study Computer Science, and, it turned out to be super boring! I was doing poorly. I was a terrible student. Just doing enough so that the university didn&#8217;t kick me out — that&#8217;s how low my bar was. On my third year however I had this course called Human Computer Interaction, where they teach you the very basics of user interface design — things like &quot;Why is this button the shape of a rectangle with drop-shadows?” (like it used be in the past, or like it is now again(?)).</p>

  <p>And I was like “OMG&quot;, — turns out design is not this artsy-fartsy thing that people just come up with. Design is based on logic and reason — there&#8217;s good design and bad design, and that was a break-through for me, it all just made lots of sense. </p>

  <p>For some reason the folks at Bohemian Coding gave me a promo code to download <a href="https://web.archive.org/web/20120529081928/http://bohemiancoding.com:80/sketch/" target="_blank">Sketch 2</a>, and so, during the rest of that school year I played around with it. At that same time Facebook released <a href="https://en.wikipedia.org/wiki/Facebook_Home" target="_blank">Facebook Home</a>, which was this weird skin/theme for Android that we later found out was designed using <a href="https://en.wikipedia.org/wiki/Quartz_Composer" target="_blank">Quartz Composer</a>, so I also started playing around with that and it turned out that by the end of that year I had somehow created some kind of portfolio with unsolicited designs only.<br/>
  If I saw an app that I thought was a piece of crap, me being a smartass would be like &#8220;This is crap, I&#8217;m gonna make it way better!&#8221;, and then proceeded to email the people who made it saying: &#8220;This is better, look at it!&#8221;.</p>

  <p>I never got an answer.</p>

  <p>But, I had a portfolio now, and so I googled &#8220;Best startups in Lisbon” — picked out 5, got a train ticket, literally knocked on their office doors and said “Hey, I&#8217;m a designer. I can help you&#8221;.</p>

  <p>For some reason the guys at <a href="http://www.thinkorange.pt" target="_blank">Think Orange</a> gave me a job. I will be forever grateful to them for taking that chance on that smug college drop out kid!</p>

  <p>We were a very small team, and even though I was hired as a designer I also had to help with some of the front-end code (we built websites, mostly) — and that meant that, sure, I was the solo designer, but most likely I was going to be the one who had to code those mockups – which also meant that I couldn&#8217;t go completely crazy with my design chops, because I would have to code it. And because I wasn&#8217;t a very good front-end developer, it forced me to be a very shy and conservative designer.</p>

  <p>At the same time, I also started doing this thing on the side called <a href="https://www.sketchcasts.net" target="_blank">SketchCasts</a>. Sketch was the only thing that I knew, really, or at least the only thing that I was barely good at. For this reason, I started recording a weekly video screencast tutorial, teaching Sketch, and began charging a membership for it — people could pay $8 a month and watch a new video every week.</p>

  <p>A year later I joined <a href="https://www.imaginarycloud.com" target="_blank">another company</a>. We were bigger and so I joined my first design team where I learned a lot about the whole process. Things like benchmarking, user research, proper wireframming — all of that good stuff. I also got into prototyping, especially <a href="https://framer.com" target="_blank">Framer</a>, and so I teamed up with a friend of mine and built this app called <a href="http://frames.design" target="_blank">Frames</a>, which was an iOS companion app for Framer, where you could live preview, and save it offline and all.</p>

  <p>Then, something amazing happened: my side projects were making me <strong>as much</strong> money as my day job. Therefore… I decided to quit my job. I would be consciously taking a 50% cut on my total income but at least now I could focus on my side projects full time.</p>

  <p>And, because I had a lot of free time now, I decided to build a game—because why not?</p>

  <p>It&#8217;s called <a href="http://breakthissafe.com" target="_blank">Break this Safe</a>, and let me tell you a quick story about this game:</p>

  <p>The year was 2014 and Apple had just <a href="https://www.youtube.com/watch?v=bdyVH5LqneU" target="_blank">announced the Apple Watch</a>. It was the first new product category from Apple since the iPhone and I was really into it (I know the iPad came out in 2010, but the iPad was just &#8220;a big phone&#8221; right?). I remember <a href="https://daringfireball.net/2014/09/apple_watch" target="_blank">John Gruber saying that the Digital Crown felt amazing</a>, and it was the most amazing feeling of any analogue controller he’d ever used. I didn&#8217;t own an Apple Watch, but I quickly became obsessed with this Digital Crown — it was a brand new input method and it sounded like it was a pretty great one.</p>

  <p>Because I didn&#8217;t own an Apple Watch, I could only imagine this &#8220;amazing feeling&#8221; of the crown and for some reason, I always imagined it to be pretty similar to one of those safe dials, right? That&#8217;s how it should feel like, I think, and honestly, I could even make a game in where you would turn the crown, and it would turn this safe dial, like a game… right?</p>

  <p>That could work!</p>

  <p>It couldn&#8217;t! Turns out you couldn&#8217;t build third party apps, I didn&#8217;t know how to write apps, and I didn&#8217;t even own a watch.</p>

  <p>The following year, 2015, Apple held the annual <a href="https://en.wikipedia.org/wiki/Apple_Worldwide_Developers_Conference" target="_blank">WWDC</a> and announced <a href="https://www.macrumors.com/roundup/watchos-2/" target="_blank">watchOS 2</a>, and now you <em>could</em> build native apps. Coincidentally, at that same WWDC week I was in London and was able to find <a href="https://www.mactrast.com/2015/04/apple-watch-fans-line-up-at-londons-dover-street-market/" target="_blank">one of 3 stores</a> in the whole world that had Apple Watch in stock and actually sold them — so I got one.</p>

  <p>I was also watching this show called <a href="https://www.netflix.com/title/80025744" target="_blank">Sense8</a> at the time (truly amazing and special show, it&#8217;s on Netflix, you should watch it) and on the first episode, this character called Wolfgang (the coolest name ever by the way) is trying to break into this safe, and he&#8217;s wearing headphones, trying to hear the subtle clicks of the dial, it&#8217;s all very intense, he&#8217;s sweating…</p>

  <img src="/assets/sense8.png" alt="Screengrab of the Sense8 show, with Wolfgang tryint to break into a safe." />

  <p>And I was like &#8220;OMG, I TOTALLY KNOW HOW THIS GAME WOULD WORK&#8221; you would have your watch, the crown is the dial, you turn the crown, you turn the dial, and you would have to listen and feel the haptic feedback on your wrist, and one of the vibrations would be stronger than the others… and that&#8217;s it, that&#8217;s the game!</p>

  <p>So I learned how to write <a href="https://developer.apple.com/swift/" target="_blank">Swift</a>, and I built it. watchOS 2 was still very new, and you could only do so much with it, which is great when you are just starting out — you only have this limited number of things that you can do.</p>

  <p>So, first things first: I would have the image of a dial, turn the crown, rotate the image. Cool. Easy first step right?</p>

  <p>Well, turns out, you couldn&#8217;t rotate images on watchOS 2.</p>

  <p>So the only way that I could find around it was to create 100 different images and just scroll through them.</p>

  <img src="/assets/bts_assets.jpg" alt="100 images just to achieve this rotation effect" />

  <p>Genius.</p>

  <p>It took me 3 months to be able to load 100 images into memory, and not have it crash. 3 months to rotate an image.</p>

  <p>I wrote a case study on this: <a href="http://breakthissafe.com/#case-study" target="_blank">breakthissafe.com</a></p>

  <p>During this process, I wasn&#8217;t a designer, or a developer — I was a guy building an app.</p>

  <p>I never designed mockups for this. It was all in my head. There was no handoff to the “dev”. There wasn&#8217;t Rafa the designer and Rafa the engineer — it was just Rafa building this thing.</p>

  <hr />

  <p>And then I joined <a href="https://www.netlify.com" target="_blank">Netlify</a>.</p>

  <p>When I joined we were just about to re-write our whole app using <a href="https://reactjs.org" target="_blank">React</a>, and, because I had been away from web development for a year or so, everything was new to me, including React.</p>

  <p>Turns out, React is pretty great. It’s an interesting mental model in where everything in the UI is a component. A button is a component. A navigation bar is a component. A header is a component. A whole page can be a component.</p>

  <p>So, if we are going to build this with components, let me design it with this mental model as well.</p>

  <p>How does this translate to Sketch and our own design tools?
  Well, we use symbols and nested symbols.</p>

  <p><a href="http://bradfrost.com/blog/post/atomic-web-design/" target="_blank">Blah blah blah, Brad Frost, atomic design, blah blah&#8230;</a> But it&#8217;s pretty spot on — I started building the tiniest of components, and then built up from that — one symbol at a time using <a href="https://www.goabstract.com" target="_blank">Abstract</a> as both our version control app and our team&#8217;s source of truth for all design work.</p>

  <p>Thinking in components and in git committing my design work forced a mentality shift in me that I still carry out today.</p>

  <p>This is all great, but I&#8217;m just designing mockups. These are just pretty pictures, blueprints for an idea — it&#8217;s worth nothing until we actually build it.</p>

  <p>I can&#8217;t approach a user, send a couple of PNGs and then ask &#8220;hey, isn&#8217;t this amazing? Use it!&#8221;.</p>

  <p>So it was time to implement this project. We started using this tool called <a href="https://github.com/storybooks/storybook" target="_blank">React Storybook</a>, and it was an amazing break-through.</p>

  <p>Using Storybook allowed the team to design components in the vacuum, without worrying about screwing something up in the actual production app — it also forced us to design and build these components without the constraints and context of the bigger picture.</p>

  <p>&#8220;Is this Card component actually 1200px wide because that&#8217;s the way it is, or is it just 100% the width of the parent container? What would this look without any container at all? What are the actual states that we have to take in consideration? What does it look like if the API returns&#8230; nothing?&#8221;. You get the point.</p>

  <hr />

  <p>&#8220;To a client or a user, designer and developer can be just words, just like our job titles. This perspective helped us understand that in reality we are nothing but a bunch of people working together on a project&#8221;.</p>

  <p>— <a href="https://journal.mozestudio.com/designers-and-developers-b3bf6a8f687d">&#8220;Designers and Developers&#8221;, by Paolo Tripodi</a></p>

  <hr />

  <p>So, before I go, I want to share this thing that I found online. This group of people decided to ask this other group of people to draw a bicycle.</p>

  <p>Before I show you the results&#8230; who here (reading this) hasn&#8217;t ridden a bike before? Who hasn&#8217;t ever seen a bicycle in real life?</p>

  <p>(If you haven&#8217;t, you should do it, it&#8217;s amazing!)</p>

  <img src="/assets/draw_a_bicycle.png" alt="People cant draw a bike" />

  <p>We are all very familiar with bicycles, we don&#8217;t bat an eye at the sight of one. Some of you probably ride bikes all the time (if you&#8217;re Dutch at least), <strong>but we have no idea how they work</strong>.</p>

  <p>It&#8217;s eye opening to see that if you truly don&#8217;t understand how something works, how can one expect to be able to draw it&#8230; or design it?</p>

  <p>And that&#8217;s how being a developer makes me a better designer — In order for me to expect me to do a good job at designing something, I <strong>need</strong> to know how it works first, even if I can&#8217;t write all of the code (think complex backend magic), I need to understand the basics of how it works to do a good job, and I think you should too.</p>

  <p>I want to remind everyone that at the end of the day my job isn’t drawing cool bitmaps just like your job isn’t writing JavaScript. We are all building things, we are all creating something, and each of us have something to contribute with in different ways. That’s the goal.</p>

  <p><a href="http://mic-drop.netlify.com/?drop" class="ninja" target="_blank">👋🎤</a></p>
</div>
